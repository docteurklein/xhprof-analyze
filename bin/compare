#!/usr/bin/env php
<?php

declare(strict_types=1);

namespace DocteurKlein\ProfAnalyze;

$repo = require(__DIR__.'/factory.php');

$old = $argv[1];
$new = $argv[2];
$what = explode(',', $argv[3] ?? 'wt');
$threshold = intval($argv[4] ?? 0);

$records = $repo->compare($old, $new, $threshold);

echo 'digraph {';

foreach ($records as $record) {
    $caller = $record->get('caller');
    $callee = $record->get('callee');
    printf('%s [label="%s"];%s', $caller->identity(), addslashes($caller->name), "\n");
    printf('%s [label="%s"];%s', $callee->identity(), addslashes($callee->name), "\n");
    $from = $record->get('from_stats');
    $to = $record->get('to_stats');

    $firstKey = current($what);
    $firstDiff = $to->$firstKey - $from->$firstKey;
    $firstRatio = $firstDiff < 0 ? $from->$firstKey / $to->$firstKey : $to->$firstKey / $from->$firstKey;

    vprintf('%s -> %s [label="%s",color="%s",fontsize="%s"];%s', [
        $caller->identity(),
        $callee->identity(),
        implode(', ', array_filter(array_map(function($key, $i) use($from, $to, $firstRatio) {
            $diff = $to->$key - $from->$key;
            if (!$diff) {
                return;
            }
            $formatted = map[$key]($diff, true);

            return vsprintf('%s: %s%s', [
                $key,
                $formatted,
                $i === 0 && $firstRatio > 1 ? sprintf(' (x%.2f)', $firstRatio) : '',
            ]);
        }, $what, array_keys($what)))),
        $firstDiff < 0 ? 'green' : 'red',
        min(30, $firstRatio * 2),
        "\n"
    ]);
}

echo '}';
